<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.coder</groupId>
    <artifactId>iamcoder</artifactId>
    <name>${project.artifactId}</name>
    <version>${revision}</version>
    <packaging>pom</packaging>

    <modules>
        <!-- 1. 基础 bom 文件，管理整个项目的依赖版本(子模块默认依赖) -->
        <module>common-basic-dependencies</module>
        <module>concurrency-in-action</module>
        <module>design-patterns-in-action</module>
        <module>err-in-action</module>
        <module>io-in-action</module>
    </modules>

    <properties>
        <!--maven方式跳过maven test, 等同$ mvn package -Dmaven.test.skip=true-->
        <maven.test.skip>false</maven.test.skip>

        <!--内部依赖版本-->
        <!-- <revision>1.0-SNAPSHOT</revision> -->

        <!--maven-surefire-plugin插件使用-->
        <argLine>-Xmx256m -Xms128m -Xmn64m -Dfile.encoding=UTF-8</argLine>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!--jdk版本-->
        <java.version>1.8</java.version>
        <maven.compiler.version>${java.version}</maven.compiler.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <flatten-maven-plugin.version>1.2.5</flatten-maven-plugin.version>

        <!-- Compiler properties -->
        <encoding>UTF-8</encoding>
        <project.build.sourceEncoding>${encoding}</project.build.sourceEncoding>
        <project.reporting.outputEncoding>${encoding}</project.reporting.outputEncoding>
        <project.resources.sourceEncoding>${encoding}</project.resources.sourceEncoding>
        <archetype.encoding>${encoding}</archetype.encoding>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.coder</groupId>
                <artifactId>common-basic-dependencies</artifactId>
                <version>${revision}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>

    </dependencyManagement>

    <!--构建配置-->
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${maven.compiler.version}</source>
                    <target>${maven.compiler.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>${flatten-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                        <configuration>
                            <updatePomFile>true</updatePomFile>
                            <flattenMode>resolveCiFriendliesOnly</flattenMode>
                        </configuration>
                    </execution>
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
                <inherited>true</inherited>
                <configuration>
                    <updatePomFile>true</updatePomFile>
                    <flattenMode>resolveCiFriendliesOnly</flattenMode>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <!--检测代码覆盖率的插件 jacoco-->
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>0.8.3</version>
                    <executions>
                        <execution>
                            <id>prepare-agent</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>report</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- 检测代码风格的插件 checkstyle（要在项目根目录下配置规则文件checkstyle.xml），然后使用mvn checkstyle::check命令验证-->
<!--                <plugin>-->
<!--                    <groupId>org.apache.maven.plugins</groupId>-->
<!--                    <artifactId>maven-checkstyle-plugin</artifactId>-->
<!--                    <version>3.0.0</version>-->
<!--                    <configuration>-->
<!--                        <configLocation>/gitlab-ci/checkstyle.xml</configLocation>-->
<!--                        <consoleOutput>true</consoleOutput>-->
<!--                        <encoding>UTF-8</encoding>-->
<!--                        <failsOnError>true</failsOnError>-->
<!--                        <linkXRef>false</linkXRef>-->
<!--                        &lt;!&ndash;跳过子module&ndash;&gt;-->
<!--                        <skip>false</skip>-->
<!--                        <skipExec>false</skipExec>-->
<!--                        <violationSeverity>error</violationSeverity>-->
<!--                    </configuration>-->
<!--                    <executions>-->
<!--                        <execution>-->
<!--                            <id>checkstyle</id>-->
<!--                            <phase>validate</phase>-->
<!--                            <goals>-->
<!--                                <goal>checkstyle</goal>-->
<!--                            </goals>-->
<!--                        </execution>-->
<!--                    </executions>-->
<!--                </plugin>-->
            </plugins>
        </pluginManagement>
    </build>

</project>